################################################################################
#
# Copyright (C) 2020 BadPixxel <www.badpixxel.com>
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.
#
################################################################################

################################################################
# Defined Pipeline Stages
stages:
  - tests
  - docker
  - deploy

################################################################
# Functional Tests
################################################################

.core_tests:    &core_tests
    stage:      tests
    tags:       [ Dedicated ]
    services:
      - mysql:5.7
    ################################################################################
    # Install & Configure Environment
    before_script:
        - cp .env.test .env
        # Run Composer to Build Dependencies
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash

    ################################################################################
    # Run Test Script
    script:
        ################################################################
        # Grumphp Travis Testsuite
        - php bin/grumphp run -n --testsuite=travis
        ################################################################
        # Grumphp CsFixer Testsuite
        - php bin/grumphp run -n --testsuite=csfixer
        ################################################################
        # Grumphp Php Stan Testsuite
        - php bin/grumphp run -n --testsuite=phpstan
        ################################################################
        # Execute PhpUnit Tests
        # - bin/phpunit

    ################################################################################
    # Run After Script
    after_script:
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/after.sh | sh

################################################################################
# PHP 8.1
tests:php-8.1:
  image: registry.gitlab.com/badpixxel-projects/php-sdk:php-8.1
  <<: *core_tests

################################################################################
# PHP 8.0
tests:php-8.0:
    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-8.0
    <<: *core_tests

################################################################################
# PHP 7.4
tests:php-7.4:
    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-7.4
    <<: *core_tests

################################################################
# Build Docker Images
################################################################
docker:
  stage:        docker
  image:        docker:stable
  tags:         [ Dedicated-Docker ]
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "[PADDOCK] Build & Upload Docker Image"
    # Connect Docker to GitLab
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    # Build & Upload Docker Image
    - docker build -t registry.gitlab.com/paddock-project/paddock:latest docker/paddock
    - docker push registry.gitlab.com/paddock-project/paddock:latest

#################################################################
## Build Documentation
#################################################################
pages:
    image:      registry.gitlab.com/badpixxel-projects/php-sdk:jekyll
    stage:      deploy
    retry:      2
    tags:       [ Dedicated ]
    ################################################################################
    # Run Test Script
    script:
        - cp .env.test .env
        - cp -Rf ./scripts ./src/Docs/
      # Run Composer to Build Dependencies
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
        # Build Documentation
        - php vendor/bin/grumphp run --tasks=build-docs
        # Export Configurations
        - php bin/paddock paddock:export public/paddock.yml
    artifacts:
        paths:
            - public
